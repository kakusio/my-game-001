{"version":3,"file":"component---src-pages-tasks-index-js-9d45f974941b83d07499.js","mappings":"kJAEA,UAAeA,EAAf,O,2IC0DA,UAhDc,WACZ,IAAIC,EAAgB,CAAC,EACjBC,EAAW,GACXC,EAAgB,GAChBC,EAAiB,GACjBC,EAAW,GAEf,GAAsB,oBAAXC,OAAwB,CACjC,IAIc,EAJRC,EAAM,IAAIC,IAAIF,OAAOG,SAASC,MAIpC,GAHAR,EAAWK,EAAII,aAAaC,IAAI,YAChCT,EAAgBI,EAAII,aAAaC,IAAI,iBACrCR,EAAiBG,EAAII,aAAaC,IAAI,kBAClCV,EACFW,OAAOC,KAAKC,EAAAA,GACTC,QACC,SAACC,GAAD,aACEF,EAAAA,EAAME,GAAKf,SAASgB,gBAApB,UACAC,EAAAA,EAAUjB,UADV,aACA,EAAqBgB,aAFvB,IAIDE,KAAI,SAACH,GAAD,OAAUhB,EAAcgB,GAAOF,EAAAA,EAAME,EAArC,IACPZ,EAAQ,wBAAgBc,EAAAA,EAAUjB,UAA1B,aAAgB,EAAqBgB,mBACxC,GAAIf,EAAe,CAAC,IAAD,EACxBF,GAAgBoB,EAAAA,EAAAA,IAAqBlB,GACrCE,EAAQ,8BAAsBiB,EAAAA,EAAUnB,UAAhC,aAAsB,EAA0Be,aACzD,MAAM,GAAId,EAAgB,CAAC,IAAD,EACzBH,GAAgBsB,EAAAA,EAAAA,IAAsBnB,GACtCC,EAAQ,+BAAuBiB,EAAAA,EAAUlB,UAAjC,aAAuB,EAA2Bc,aAC3D,CACF,CACD,IAAMM,EAAQX,OAAOC,KAAKb,GAAewB,OAAS,EAAIxB,EAAgBc,EAAAA,EACtE,OACE,gBAAC,IAAD,CACEW,MAAM,QACNrB,SAAUA,EACVsB,MAAOH,EACPI,eAAgB,gBAAGX,EAAH,EAAGA,IAAKU,EAAR,EAAQA,MAAR,OACd,gCACE,gBAAC,KAAD,CAAME,GAAE,mBAAqBF,EAAMV,GAAKf,SAASe,KAAjD,YACYU,EAAMV,GAAKf,SAASgB,cAEhC,oCACA,gBAAC,KAAD,CAAMW,GAAE,mBAAqBZ,GAA7B,oBANY,GAWrB,EAIM,IAAMa,EAAO,kBAAM,0CAAN,C","sources":["webpack://millions-on-mars/./src/pages/tasks/index.js","webpack://millions-on-mars/./src/pages/tasks/tasks.js"],"sourcesContent":["import Tasks from \"./tasks\"\r\n\r\nexport default Tasks","import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nimport PageWrapper from \"../../component/pageWrapper\";\r\nimport TASKS from \"../../fakedb/tasks\";\r\nimport BUILDINGS from \"../../fakedb/buildings\";\r\nimport RESOURCES from \"../../fakedb/resources\";\r\nimport {\r\n  taskByResourcesInput,\r\n  taskByResourcesOutput,\r\n} from \"../../fakedb/taskResource\";\r\n\r\nconst Tasks = () => {\r\n  let filteredTasks = {};\r\n  let building = \"\";\r\n  let resourceInput = \"\";\r\n  let resourceOutput = \"\";\r\n  let subTitle = \"\";\r\n\r\n  if (typeof window !== \"undefined\") {\r\n    const url = new URL(window.location.href);\r\n    building = url.searchParams.get(\"building\");\r\n    resourceInput = url.searchParams.get(\"resourceInput\");\r\n    resourceOutput = url.searchParams.get(\"resourceOutput\");\r\n    if (building) {\r\n      Object.keys(TASKS)\r\n        .filter(\r\n          (key) =>\r\n            TASKS[key].building.display_name ===\r\n            BUILDINGS[building]?.display_name\r\n        )\r\n        .map((key) => (filteredTasks[key] = TASKS[key]));\r\n      subTitle = `Building: ${BUILDINGS[building]?.display_name}`;\r\n    } else if (resourceInput) {\r\n      filteredTasks = taskByResourcesInput(resourceInput);\r\n      subTitle = `Input Resource: ${RESOURCES[resourceInput]?.display_name}`;\r\n    } else if (resourceOutput) {\r\n      filteredTasks = taskByResourcesOutput(resourceOutput);\r\n      subTitle = `Output Resource: ${RESOURCES[resourceOutput]?.display_name}`;\r\n    }\r\n  }\r\n  const tasks = Object.keys(filteredTasks).length > 0 ? filteredTasks : TASKS;\r\n  return (\r\n    <PageWrapper\r\n      title=\"Tasks\"\r\n      subTitle={subTitle}\r\n      items={tasks}\r\n      getDescription={({ key, items }) => (\r\n        <>\r\n          <Link to={`/tasks?building=${items[key].building.key}`}>\r\n            Tasks By {items[key].building.display_name}\r\n          </Link>\r\n          <span> || </span>\r\n          <Link to={`/resources?task=${key}`}>Resources Output</Link>\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n\r\nexport const Head = () => <title>Tasks Page</title>;\r\n"],"names":["Tasks","filteredTasks","building","resourceInput","resourceOutput","subTitle","window","url","URL","location","href","searchParams","get","Object","keys","TASKS","filter","key","display_name","BUILDINGS","map","taskByResourcesInput","RESOURCES","taskByResourcesOutput","tasks","length","title","items","getDescription","to","Head"],"sourceRoot":""}